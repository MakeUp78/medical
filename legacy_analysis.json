{
    "structure": {
        "root": {
            "directories": [
                ".git",
                ".github",
                "src",
                "__pycache__"
            ],
            "python_files": [
                "main.py"
            ],
            "other_files": [
                ".gitignore",
                "best_frontal_frame.png",
                "CANVAS_GUIDE.md",
                "config.json",
                "facial_analysis.log",
                "README.md",
                "requirements.txt",
                "simul_camera.mp4",
                "simul_camera1.mp4",
                "WhatsApp Image 2025-09-21 at 13.09.56.jpeg"
            ],
            "total_files": 11
        },
        ".git": {
            "directories": [
                "hooks",
                "info",
                "logs",
                "objects",
                "refs"
            ],
            "python_files": [],
            "other_files": [
                "COMMIT_EDITMSG",
                "config",
                "description",
                "HEAD",
                "index"
            ],
            "total_files": 5
        },
        ".git\\hooks": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "applypatch-msg.sample",
                "commit-msg.sample",
                "fsmonitor-watchman.sample",
                "post-update.sample",
                "pre-applypatch.sample",
                "pre-commit.sample",
                "pre-merge-commit.sample",
                "pre-push.sample",
                "pre-rebase.sample",
                "pre-receive.sample",
                "prepare-commit-msg.sample",
                "push-to-checkout.sample",
                "sendemail-validate.sample",
                "update.sample"
            ],
            "total_files": 14
        },
        ".git\\info": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "exclude"
            ],
            "total_files": 1
        },
        ".git\\logs": {
            "directories": [
                "refs"
            ],
            "python_files": [],
            "other_files": [
                "HEAD"
            ],
            "total_files": 1
        },
        ".git\\logs\\refs": {
            "directories": [
                "heads",
                "remotes"
            ],
            "python_files": [],
            "other_files": [],
            "total_files": 0
        },
        ".git\\logs\\refs\\heads": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "main"
            ],
            "total_files": 1
        },
        ".git\\logs\\refs\\remotes": {
            "directories": [
                "origin"
            ],
            "python_files": [],
            "other_files": [],
            "total_files": 0
        },
        ".git\\logs\\refs\\remotes\\origin": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "main"
            ],
            "total_files": 1
        },
        ".git\\objects": {
            "directories": [
                "03",
                "06",
                "08",
                "0d",
                "10",
                "11",
                "12",
                "13",
                "1d",
                "1f",
                "22",
                "24",
                "25",
                "36",
                "37",
                "38",
                "3b",
                "3c",
                "41",
                "46",
                "4b",
                "4f",
                "54",
                "59",
                "5a",
                "60",
                "62",
                "6a",
                "6b",
                "6d",
                "8a",
                "8f",
                "a2",
                "aa",
                "af",
                "b2",
                "b8",
                "bc",
                "bf",
                "c0",
                "c3",
                "c5",
                "c7",
                "cb",
                "dc",
                "dd",
                "e1",
                "e2",
                "e5",
                "e7",
                "f6",
                "fb",
                "fc",
                "fe",
                "ff",
                "info",
                "pack"
            ],
            "python_files": [],
            "other_files": [],
            "total_files": 0
        },
        ".git\\objects\\03": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "12fbc4e659bbd764cd45c360cbf7e6aa8d7489"
            ],
            "total_files": 1
        },
        ".git\\objects\\06": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "63f968747cf8b7676d902732fa710e555356f8"
            ],
            "total_files": 1
        },
        ".git\\objects\\08": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "7c486ded017e66fa1d9124869d5d0403037cdb"
            ],
            "total_files": 1
        },
        ".git\\objects\\0d": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "abb2faa50f96bdca4a05baad7abef71c0ad115"
            ],
            "total_files": 1
        },
        ".git\\objects\\10": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "2c460129fe83a5222cc18954120d00b4f24a16"
            ],
            "total_files": 1
        },
        ".git\\objects\\11": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "b7c67ba199a1b0fa693edee1dcec178d045f0d"
            ],
            "total_files": 1
        },
        ".git\\objects\\12": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "d2c50c86b469c382975f2d9d3eabf9894d9b5b"
            ],
            "total_files": 1
        },
        ".git\\objects\\13": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "df4ed320feca4f3849cf20e23db0a8d0fd3381"
            ],
            "total_files": 1
        },
        ".git\\objects\\1d": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "216645932d75959e57e1ab0366db3e35b38be8"
            ],
            "total_files": 1
        },
        ".git\\objects\\1f": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "26595e5e1a83b9a39c43b69ca7cd669c0d6221"
            ],
            "total_files": 1
        },
        ".git\\objects\\22": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "6737209c1558744f959464e772ea2324218edb",
                "67cff86901127e9a87b681feb2d4a156558463"
            ],
            "total_files": 2
        },
        ".git\\objects\\24": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "feac31270d69964982219a93b9d2ede89c293b"
            ],
            "total_files": 1
        },
        ".git\\objects\\25": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "28f654b9383e4f5002984cf2db39d369195d74"
            ],
            "total_files": 1
        },
        ".git\\objects\\36": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "8b11dc449c677be06f3eb9bc9c71cec63e01ac"
            ],
            "total_files": 1
        },
        ".git\\objects\\37": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "b4de52e756f7acf69e34efa568018e42b0bdaf"
            ],
            "total_files": 1
        },
        ".git\\objects\\38": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "3e3cc75fba19b4f9b71bfb5826fac1d07a13a2"
            ],
            "total_files": 1
        },
        ".git\\objects\\3b": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "3ae65e3ad36a2dfe3d72b369bb3cd61f9384b7"
            ],
            "total_files": 1
        },
        ".git\\objects\\3c": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "c454a6a7178f7f89dd16afec3ffc1803bd9ace"
            ],
            "total_files": 1
        },
        ".git\\objects\\41": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "561af261c2cf8d01367ac78695a7fab76bb91e"
            ],
            "total_files": 1
        },
        ".git\\objects\\46": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "4ec0f9357e7552f21849cfb69034f5831ad1a9"
            ],
            "total_files": 1
        },
        ".git\\objects\\4b": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "825dc642cb6eb9a060e54bf8d69288fbee4904"
            ],
            "total_files": 1
        },
        ".git\\objects\\4f": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "ada950eb41da7f514364490496d96cdc557006"
            ],
            "total_files": 1
        },
        ".git\\objects\\54": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "7e32f5961e265fe6b67ba4dfec467d8eee18d2"
            ],
            "total_files": 1
        },
        ".git\\objects\\59": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "22078904f18a0e443a1c087c3d415dd11a3ce1"
            ],
            "total_files": 1
        },
        ".git\\objects\\5a": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "33e59a5d373fe7cec4ba84126307804f93ac8f"
            ],
            "total_files": 1
        },
        ".git\\objects\\60": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "1cedf3423853303affb9c0d1ea463d2941290f"
            ],
            "total_files": 1
        },
        ".git\\objects\\62": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "90acb76a99aaa6bf7b1b4c8b2afca3898f5010"
            ],
            "total_files": 1
        },
        ".git\\objects\\6a": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "183093c60db1102a6ca1b21be8551ae5067f61"
            ],
            "total_files": 1
        },
        ".git\\objects\\6b": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "4203951bda85bdbcc4d1ef02ea34678a4ffd07"
            ],
            "total_files": 1
        },
        ".git\\objects\\6d": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "3fb19c060d5557ca3d0ff5dde684f0aa3ed8ad"
            ],
            "total_files": 1
        },
        ".git\\objects\\8a": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "98d4d5d8241376347efea2b2e15a4bdacf72a4"
            ],
            "total_files": 1
        },
        ".git\\objects\\8f": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "a768f691e34aeab26bd2c829fa441647ef1c1e"
            ],
            "total_files": 1
        },
        ".git\\objects\\a2": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "d9efa6dd019a649da286911bba8a03df359545"
            ],
            "total_files": 1
        },
        ".git\\objects\\aa": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "3f55c4aa29364a0bf7b06ebe5ac35082089658",
                "aa2957efe185f1bdbaeafa64ebd53aae42c1f9"
            ],
            "total_files": 2
        },
        ".git\\objects\\af": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "40b2b29bdd9c5732d958e896122660031d9662"
            ],
            "total_files": 1
        },
        ".git\\objects\\b2": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "eb6b9b0bee4b521bdeaa881e75ed180c289745"
            ],
            "total_files": 1
        },
        ".git\\objects\\b8": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "44a29591fb52c8a89227a684672562d5030f86"
            ],
            "total_files": 1
        },
        ".git\\objects\\bc": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "fe1fa34e662bed1ee4970aca3ae1083662424f"
            ],
            "total_files": 1
        },
        ".git\\objects\\bf": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "23cf63915fa3654f56df7b8158c6d21c13ddc2"
            ],
            "total_files": 1
        },
        ".git\\objects\\c0": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "ebb905e95b32e519e5fa5457cfc9baf81bc0c6"
            ],
            "total_files": 1
        },
        ".git\\objects\\c3": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "253952d8b5badfaaf11c49a20b3d6fcf7b3dd5",
                "7ccfee276fa13852d43a1c414db73c1906eaaa"
            ],
            "total_files": 2
        },
        ".git\\objects\\c5": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "6ddf96619a849e797abcf1c3c9058ab2df4a03"
            ],
            "total_files": 1
        },
        ".git\\objects\\c7": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "ab12f75615e224265731c605cc1929957292f6"
            ],
            "total_files": 1
        },
        ".git\\objects\\cb": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "a5a9c33b5b0b7f6d737861ebb7f56b569efc57"
            ],
            "total_files": 1
        },
        ".git\\objects\\dc": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "54694a4f7fdaf4c59958bdacc6a6a8bc8e14cf"
            ],
            "total_files": 1
        },
        ".git\\objects\\dd": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "93397b813fa6a178ecd2f06b382ec86b073776"
            ],
            "total_files": 1
        },
        ".git\\objects\\e1": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "995efd378a1027b65d25dff3906fede6585e4d"
            ],
            "total_files": 1
        },
        ".git\\objects\\e2": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "ad70ca4c10b9569d8d9860279d9ddc4aed1088"
            ],
            "total_files": 1
        },
        ".git\\objects\\e5": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "85aaa73bf3b90613756fed01d888b7535a7096"
            ],
            "total_files": 1
        },
        ".git\\objects\\e7": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "4f9cb16bcd4d8fe6684bd271ad731a8fa95438"
            ],
            "total_files": 1
        },
        ".git\\objects\\f6": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "f498428bc6ec0ff7429bcdab9d688cdfa8ebae"
            ],
            "total_files": 1
        },
        ".git\\objects\\fb": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "8aa64ca840796ab3093b88bd84f2bbeb10f7b5"
            ],
            "total_files": 1
        },
        ".git\\objects\\fc": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "eef76e861aa8ec67088c87c23310bab36fa115"
            ],
            "total_files": 1
        },
        ".git\\objects\\fe": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "fa3ea8d8eb70821823733aa19658610e25fe48"
            ],
            "total_files": 1
        },
        ".git\\objects\\ff": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "b6c1fe2c29c234ad4eeeb2b3889f7065e6bafd"
            ],
            "total_files": 1
        },
        ".git\\objects\\info": {
            "directories": [],
            "python_files": [],
            "other_files": [],
            "total_files": 0
        },
        ".git\\objects\\pack": {
            "directories": [],
            "python_files": [],
            "other_files": [],
            "total_files": 0
        },
        ".git\\refs": {
            "directories": [
                "heads",
                "remotes",
                "tags"
            ],
            "python_files": [],
            "other_files": [],
            "total_files": 0
        },
        ".git\\refs\\heads": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "main"
            ],
            "total_files": 1
        },
        ".git\\refs\\remotes": {
            "directories": [
                "origin"
            ],
            "python_files": [],
            "other_files": [],
            "total_files": 0
        },
        ".git\\refs\\remotes\\origin": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "main"
            ],
            "total_files": 1
        },
        ".git\\refs\\tags": {
            "directories": [],
            "python_files": [],
            "other_files": [],
            "total_files": 0
        },
        ".github": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "copilot-instructions.md"
            ],
            "total_files": 1
        },
        "src": {
            "directories": [
                "__pycache__"
            ],
            "python_files": [
                "canvas_app.py",
                "config_manager.py",
                "face_detector.py",
                "green_dots_processor.py",
                "measurement_tools.py",
                "professional_canvas.py",
                "scoring_config.py",
                "utils.py",
                "video_analyzer.py"
            ],
            "other_files": [],
            "total_files": 9
        },
        "src\\__pycache__": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "canvas_app.cpython-311.pyc",
                "canvas_app.cpython-312.pyc",
                "face_detector.cpython-311.pyc",
                "face_detector.cpython-312.pyc",
                "green_dots_processor.cpython-311.pyc",
                "green_dots_processor.cpython-312.pyc",
                "measurement_tools.cpython-311.pyc",
                "measurement_tools.cpython-312.pyc",
                "professional_canvas.cpython-311.pyc",
                "professional_canvas.cpython-312.pyc",
                "scoring_config.cpython-311.pyc",
                "scoring_config.cpython-312.pyc",
                "utils.cpython-311.pyc",
                "utils.cpython-312.pyc",
                "video_analyzer.cpython-311.pyc",
                "video_analyzer.cpython-312.pyc"
            ],
            "total_files": 16
        },
        "__pycache__": {
            "directories": [],
            "python_files": [],
            "other_files": [
                "main.cpython-311.pyc"
            ],
            "total_files": 1
        }
    },
    "functions": {
        "main.py": {
            "functions": [
                {
                    "name": "main",
                    "line": 279,
                    "args": [],
                    "decorators": []
                },
                {
                    "name": "__init__",
                    "line": 42,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_signal_handlers",
                    "line": 47,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "check_dependencies",
                    "line": 57,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "import_modules",
                    "line": 110,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "create_gui",
                    "line": 132,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_window_close",
                    "line": 169,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "graceful_shutdown",
                    "line": 174,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "print_welcome_message",
                    "line": 198,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "run",
                    "line": 226,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "signal_handler",
                    "line": 50,
                    "args": [
                        "signum",
                        "frame"
                    ],
                    "decorators": []
                }
            ],
            "classes": [
                {
                    "name": "FacialAnalysisApp",
                    "line": 39,
                    "methods": [
                        "__init__",
                        "setup_signal_handlers",
                        "check_dependencies",
                        "import_modules",
                        "create_gui",
                        "on_window_close",
                        "graceful_shutdown",
                        "print_welcome_message",
                        "run"
                    ],
                    "bases": []
                }
            ],
            "imports": [
                "sys",
                "os",
                "signal",
                "tkinter",
                "tkinter.messagebox",
                "logging",
                "src.canvas_app.CanvasApp"
            ],
            "gui_elements": [
                "tk.Tk",
                "tk.Tk",
                "tk.Tk",
                "Tk()",
                "Tk()",
                "Tk()"
            ],
            "cv_calls": []
        },
        "src\\canvas_app.py": {
            "functions": [
                {
                    "name": "main",
                    "line": 3654,
                    "args": [],
                    "decorators": []
                },
                {
                    "name": "__init__",
                    "line": 22,
                    "args": [
                        "self",
                        "root"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_gui",
                    "line": 116,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "create_menu",
                    "line": 267,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_controls",
                    "line": 304,
                    "args": [
                        "self",
                        "parent"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_scoring_controls",
                    "line": 519,
                    "args": [
                        "self",
                        "parent"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_canvas",
                    "line": 637,
                    "args": [
                        "self",
                        "parent"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_integrated_preview",
                    "line": 653,
                    "args": [
                        "self",
                        "parent"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_play_pause",
                    "line": 870,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "stop_video",
                    "line": 889,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_seek_change",
                    "line": 911,
                    "args": [
                        "self",
                        "value"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_speed_change",
                    "line": 932,
                    "args": [
                        "self",
                        "value"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_video_controls_state",
                    "line": 942,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_seek_position",
                    "line": 978,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "add_debug_log",
                    "line": 1005,
                    "args": [
                        "self",
                        "score",
                        "debug_data",
                        "elapsed_time"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_debug_tree",
                    "line": 1053,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "clear_debug_logs",
                    "line": 1087,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "reset_interface_for_new_analysis",
                    "line": 1092,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_measurements_area",
                    "line": 1122,
                    "args": [
                        "self",
                        "parent"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_status_bar",
                    "line": 1150,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "load_image",
                    "line": 1155,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "load_video",
                    "line": 1176,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "test_webcam",
                    "line": 1218,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "start_webcam",
                    "line": 1244,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_integrated_preview_status",
                    "line": 1273,
                    "args": [
                        "self",
                        "text"
                    ],
                    "decorators": []
                },
                {
                    "name": "check_and_create_preview",
                    "line": 1278,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "stop_video_analysis",
                    "line": 1283,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_video_frame_update",
                    "line": 1301,
                    "args": [
                        "self",
                        "frame",
                        "score"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_video_preview_update",
                    "line": 1432,
                    "args": [
                        "self",
                        "frame"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_integrated_preview_display",
                    "line": 1469,
                    "args": [
                        "self",
                        "photo"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_canvas_with_new_frame",
                    "line": 1478,
                    "args": [
                        "self",
                        "frame",
                        "landmarks",
                        "score"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_analysis_completion",
                    "line": 1497,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_frame_update",
                    "line": 1528,
                    "args": [
                        "self",
                        "frame",
                        "landmarks",
                        "score"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_debug_update",
                    "line": 1565,
                    "args": [
                        "self",
                        "video_time_seconds",
                        "frame_number",
                        "score",
                        "debug_info",
                        "frame"
                    ],
                    "decorators": []
                },
                {
                    "name": "_sort_debug_table_by_score",
                    "line": 1657,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_debug_row_double_click",
                    "line": 1684,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_preview_display",
                    "line": 1730,
                    "args": [
                        "self",
                        "photo"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_current_image",
                    "line": 1748,
                    "args": [
                        "self",
                        "image",
                        "landmarks",
                        "auto_resize"
                    ],
                    "decorators": []
                },
                {
                    "name": "detect_landmarks",
                    "line": 1768,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "detect_green_dots",
                    "line": 1782,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_green_dots_overlay",
                    "line": 1874,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "refresh_canvas_only",
                    "line": 1893,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "canvas_to_image_coordinates",
                    "line": 1984,
                    "args": [
                        "self",
                        "canvas_x",
                        "canvas_y"
                    ],
                    "decorators": []
                },
                {
                    "name": "image_to_canvas_coordinates",
                    "line": 2014,
                    "args": [
                        "self",
                        "image_x",
                        "image_y"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_measurement_overlays",
                    "line": 2034,
                    "args": [
                        "self",
                        "image"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_distance_overlay",
                    "line": 2048,
                    "args": [
                        "self",
                        "image",
                        "overlay"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_angle_overlay",
                    "line": 2060,
                    "args": [
                        "self",
                        "image",
                        "overlay"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_area_overlay",
                    "line": 2090,
                    "args": [
                        "self",
                        "image",
                        "overlay"
                    ],
                    "decorators": []
                },
                {
                    "name": "add_measurement_overlay",
                    "line": 2138,
                    "args": [
                        "self",
                        "measurement_type",
                        "points",
                        "value",
                        "label",
                        "use_coordinates",
                        "coordinates"
                    ],
                    "decorators": []
                },
                {
                    "name": "clear_measurement_overlays",
                    "line": 2175,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "reset_preset_buttons",
                    "line": 2185,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_measurement_overlays",
                    "line": 2200,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_canvas_click",
                    "line": 2205,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_canvas_zoom",
                    "line": 2236,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_canvas_drag",
                    "line": 2241,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "find_closest_landmark",
                    "line": 2246,
                    "args": [
                        "self",
                        "x",
                        "y",
                        "max_distance"
                    ],
                    "decorators": []
                },
                {
                    "name": "add_landmark_selection",
                    "line": 2279,
                    "args": [
                        "self",
                        "landmark_idx"
                    ],
                    "decorators": []
                },
                {
                    "name": "change_selection_mode",
                    "line": 2301,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "change_measurement_mode",
                    "line": 2321,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "clear_selections",
                    "line": 2327,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_measurement",
                    "line": 2334,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_face_width",
                    "line": 2444,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_face_height",
                    "line": 2459,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_eye_distance",
                    "line": 2470,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_nose_width",
                    "line": 2483,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_mouth_width",
                    "line": 2494,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_eyebrow_areas",
                    "line": 2507,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_eye_areas",
                    "line": 2522,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "remove_preset_overlay",
                    "line": 2533,
                    "args": [
                        "self",
                        "preset_key"
                    ],
                    "decorators": []
                },
                {
                    "name": "measure_face_width",
                    "line": 2544,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "measure_face_height",
                    "line": 2591,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "measure_eye_distance",
                    "line": 2638,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "measure_nose_width",
                    "line": 2685,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "measure_mouth_width",
                    "line": 2732,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "measure_eyebrow_areas",
                    "line": 2779,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "measure_eye_areas",
                    "line": 2864,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "measure_facial_symmetry",
                    "line": 2966,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "add_measurement",
                    "line": 2986,
                    "args": [
                        "self",
                        "measurement_type",
                        "value",
                        "unit"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_all_landmarks",
                    "line": 2995,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_measurements",
                    "line": 3000,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "save_image",
                    "line": 3005,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "export_measurements",
                    "line": 3041,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "create_preview_window",
                    "line": 3065,
                    "args": [
                        "self",
                        "title"
                    ],
                    "decorators": []
                },
                {
                    "name": "close_preview_window",
                    "line": 3151,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_video_preview",
                    "line": 3162,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "capture_current_frame",
                    "line": 3170,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "save_frame_to_buffer",
                    "line": 3196,
                    "args": [
                        "self",
                        "frame_number",
                        "frame",
                        "landmarks"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_closing",
                    "line": 3211,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_debug_log",
                    "line": 3226,
                    "args": [
                        "self",
                        "message",
                        "debug_info"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_nose_weight_change",
                    "line": 3245,
                    "args": [
                        "self",
                        "value"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_mouth_weight_change",
                    "line": 3252,
                    "args": [
                        "self",
                        "value"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_symmetry_weight_change",
                    "line": 3259,
                    "args": [
                        "self",
                        "value"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_eye_weight_change",
                    "line": 3266,
                    "args": [
                        "self",
                        "value"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_scoring_config_change",
                    "line": 3273,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "recalculate_current_score",
                    "line": 3277,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "reset_scoring_weights",
                    "line": 3298,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "preset_nose_focus",
                    "line": 3306,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "preset_less_symmetry",
                    "line": 3314,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_axis",
                    "line": 3322,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_slider_values",
                    "line": 3327,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_professional_canvas_click",
                    "line": 3343,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_measurement_completed",
                    "line": 3377,
                    "args": [
                        "self",
                        "measurement_data"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_canvas_display",
                    "line": 3387,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_landmarks_on_professional_canvas",
                    "line": 3492,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_measurements_on_professional_canvas",
                    "line": 3571,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "clear_canvas",
                    "line": 3603,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "save_image",
                    "line": 3608,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "export_measurements",
                    "line": 3632,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "_on_mousewheel",
                    "line": 171,
                    "args": [
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "bind_mousewheel_to_frame",
                    "line": 175,
                    "args": [
                        "widget"
                    ],
                    "decorators": []
                },
                {
                    "name": "_on_preview_mousewheel",
                    "line": 231,
                    "args": [
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "bind_preview_mousewheel",
                    "line": 235,
                    "args": [
                        "widget"
                    ],
                    "decorators": []
                },
                {
                    "name": "handle_completion",
                    "line": 1500,
                    "args": [],
                    "decorators": []
                },
                {
                    "name": "update_canvas",
                    "line": 1534,
                    "args": [],
                    "decorators": []
                },
                {
                    "name": "update_debug_table",
                    "line": 1573,
                    "args": [],
                    "decorators": []
                }
            ],
            "classes": [
                {
                    "name": "CanvasApp",
                    "line": 21,
                    "methods": [
                        "__init__",
                        "setup_gui",
                        "create_menu",
                        "setup_controls",
                        "setup_scoring_controls",
                        "setup_canvas",
                        "setup_integrated_preview",
                        "toggle_play_pause",
                        "stop_video",
                        "on_seek_change",
                        "on_speed_change",
                        "update_video_controls_state",
                        "update_seek_position",
                        "add_debug_log",
                        "update_debug_tree",
                        "clear_debug_logs",
                        "reset_interface_for_new_analysis",
                        "setup_measurements_area",
                        "setup_status_bar",
                        "load_image",
                        "load_video",
                        "test_webcam",
                        "start_webcam",
                        "update_integrated_preview_status",
                        "check_and_create_preview",
                        "stop_video_analysis",
                        "on_video_frame_update",
                        "on_video_preview_update",
                        "update_integrated_preview_display",
                        "update_canvas_with_new_frame",
                        "on_analysis_completion",
                        "on_frame_update",
                        "on_debug_update",
                        "_sort_debug_table_by_score",
                        "on_debug_row_double_click",
                        "update_preview_display",
                        "set_current_image",
                        "detect_landmarks",
                        "detect_green_dots",
                        "toggle_green_dots_overlay",
                        "refresh_canvas_only",
                        "canvas_to_image_coordinates",
                        "image_to_canvas_coordinates",
                        "draw_measurement_overlays",
                        "draw_distance_overlay",
                        "draw_angle_overlay",
                        "draw_area_overlay",
                        "add_measurement_overlay",
                        "clear_measurement_overlays",
                        "reset_preset_buttons",
                        "toggle_measurement_overlays",
                        "on_canvas_click",
                        "on_canvas_zoom",
                        "on_canvas_drag",
                        "find_closest_landmark",
                        "add_landmark_selection",
                        "change_selection_mode",
                        "change_measurement_mode",
                        "clear_selections",
                        "calculate_measurement",
                        "toggle_face_width",
                        "toggle_face_height",
                        "toggle_eye_distance",
                        "toggle_nose_width",
                        "toggle_mouth_width",
                        "toggle_eyebrow_areas",
                        "toggle_eye_areas",
                        "remove_preset_overlay",
                        "measure_face_width",
                        "measure_face_height",
                        "measure_eye_distance",
                        "measure_nose_width",
                        "measure_mouth_width",
                        "measure_eyebrow_areas",
                        "measure_eye_areas",
                        "measure_facial_symmetry",
                        "add_measurement",
                        "toggle_all_landmarks",
                        "toggle_measurements",
                        "save_image",
                        "export_measurements",
                        "create_preview_window",
                        "close_preview_window",
                        "toggle_video_preview",
                        "capture_current_frame",
                        "save_frame_to_buffer",
                        "on_closing",
                        "on_debug_log",
                        "on_nose_weight_change",
                        "on_mouth_weight_change",
                        "on_symmetry_weight_change",
                        "on_eye_weight_change",
                        "on_scoring_config_change",
                        "recalculate_current_score",
                        "reset_scoring_weights",
                        "preset_nose_focus",
                        "preset_less_symmetry",
                        "toggle_axis",
                        "update_slider_values",
                        "on_professional_canvas_click",
                        "on_measurement_completed",
                        "update_canvas_display",
                        "draw_landmarks_on_professional_canvas",
                        "draw_measurements_on_professional_canvas",
                        "clear_canvas",
                        "save_image",
                        "export_measurements"
                    ],
                    "bases": []
                }
            ],
            "imports": [
                "tkinter",
                "tkinter.ttk",
                "tkinter.filedialog",
                "tkinter.messagebox",
                "cv2",
                "numpy",
                "PIL.Image",
                "PIL.ImageTk",
                "PIL.ImageDraw",
                "PIL.ImageFont",
                "typing.List",
                "typing.Tuple",
                "typing.Optional",
                "typing.Dict",
                "src.face_detector.FaceDetector",
                "src.video_analyzer.VideoAnalyzer",
                "src.measurement_tools.MeasurementTools",
                "src.green_dots_processor.GreenDotsProcessor",
                "src.scoring_config.ScoringConfig",
                "src.utils.resize_image_keep_aspect",
                "src.professional_canvas.ProfessionalCanvas",
                "matplotlib.pyplot",
                "datetime",
                "cv2",
                "src.utils.get_advanced_orientation_score",
                "math",
                "src.utils.calculate_pure_frontal_score",
                "traceback",
                "json",
                "cv2"
            ],
            "gui_elements": [
                "tk.StringVar",
                "tk.StringVar",
                "tk.DoubleVar",
                "tk.DoubleVar",
                "tk.Frame",
                "tk.Canvas",
                "tk.Scrollbar",
                "tk.Frame",
                "tk.LabelFrame",
                "tk.Frame",
                "tk.Canvas",
                "tk.Scrollbar",
                "tk.LabelFrame",
                "tk.LabelFrame",
                "tk.Menu",
                "tk.Menu",
                "tk.Menu",
                "tk.Menu",
                "tk.BooleanVar",
                "tk.LabelFrame",
                "tk.X",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Label",
                "tk.LabelFrame",
                "tk.X",
                "tk.Frame",
                "tk.X",
                "tk.Label",
                "tk.StringVar",
                "tk.Radiobutton",
                "tk.Radiobutton",
                "tk.Radiobutton",
                "tk.Frame",
                "tk.X",
                "tk.Label",
                "tk.StringVar",
                "tk.Radiobutton",
                "tk.Radiobutton",
                "tk.Frame",
                "tk.X",
                "tk.Button",
                "tk.Button",
                "tk.LabelFrame",
                "tk.X",
                "tk.Button",
                "tk.LabelFrame",
                "tk.X",
                "tk.BooleanVar",
                "tk.Checkbutton",
                "tk.W",
                "tk.BooleanVar",
                "tk.Checkbutton",
                "tk.W",
                "tk.Button",
                "tk.X",
                "tk.Button",
                "tk.X",
                "tk.Button",
                "tk.X",
                "tk.BooleanVar",
                "tk.Checkbutton",
                "tk.W",
                "tk.LabelFrame",
                "tk.X",
                "tk.Frame",
                "tk.X",
                "tk.Label",
                "tk.Frame",
                "tk.X",
                "tk.Frame",
                "tk.X",
                "tk.Label",
                "tk.LEFT",
                "tk.Scale",
                "tk.HORIZONTAL",
                "tk.LEFT",
                "tk.X",
                "tk.Label",
                "tk.RIGHT",
                "tk.Frame",
                "tk.X",
                "tk.Label",
                "tk.LEFT",
                "tk.Scale",
                "tk.HORIZONTAL",
                "tk.LEFT",
                "tk.X",
                "tk.Label",
                "tk.RIGHT",
                "tk.Frame",
                "tk.X",
                "tk.Label",
                "tk.LEFT",
                "tk.Scale",
                "tk.HORIZONTAL",
                "tk.LEFT",
                "tk.X",
                "tk.Label",
                "tk.RIGHT",
                "tk.Frame",
                "tk.X",
                "tk.Label",
                "tk.LEFT",
                "tk.Scale",
                "tk.HORIZONTAL",
                "tk.LEFT",
                "tk.X",
                "tk.Label",
                "tk.RIGHT",
                "tk.Frame",
                "tk.X",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Frame",
                "tk.X",
                "tk.BooleanVar",
                "tk.Checkbutton",
                "tk.W",
                "tk.LabelFrame",
                "tk.Frame",
                "tk.BooleanVar",
                "tk.Checkbutton",
                "tk.Frame",
                "tk.Button",
                "tk.LEFT",
                "tk.Button",
                "tk.LEFT",
                "tk.Button",
                "tk.Frame",
                "tk.Label",
                "tk.Scale",
                "tk.Label",
                "tk.Frame",
                "tk.Label",
                "tk.Scale",
                "tk.Label",
                "tk.Frame",
                "tk.Label",
                "tk.CENTER",
                "tk.BOTH",
                "tk.Frame",
                "tk.Label",
                "tk.LabelFrame",
                "tk.Frame",
                "tk.Treeview",
                "tk.Scrollbar",
                "tk.Frame",
                "tk.Button",
                "tk.BooleanVar",
                "tk.Checkbutton",
                "tk.Treeview",
                "tk.Scrollbar",
                "tk.VERTICAL",
                "tk.Label",
                "Tk.PhotoImage",
                "tk.TclError",
                "Tk.PhotoImage",
                "tk.X",
                "tk.Toplevel",
                "tk.Frame",
                "tk.BOTH",
                "tk.Label",
                "tk.Label",
                "tk.BOTH",
                "tk.Frame",
                "tk.X",
                "tk.Label",
                "tk.W",
                "tk.Label",
                "tk.W",
                "tk.Label",
                "tk.W",
                "tk.Label",
                "tk.W",
                "tk.Label",
                "tk.W",
                "tk.Label",
                "tk.W",
                "tk.Frame",
                "tk.X",
                "tk.Button",
                "tk.LEFT",
                "tk.Button",
                "tk.LEFT",
                "tk.Tk",
                "ttk.Frame",
                "ttk.Scrollbar",
                "ttk.Frame",
                "ttk.LabelFrame",
                "ttk.Frame",
                "ttk.Scrollbar",
                "ttk.LabelFrame",
                "ttk.LabelFrame",
                "ttk.LabelFrame",
                "ttk.Button",
                "ttk.Button",
                "ttk.Button",
                "ttk.Button",
                "ttk.Button",
                "ttk.Label",
                "ttk.LabelFrame",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Radiobutton",
                "ttk.Radiobutton",
                "ttk.Radiobutton",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Radiobutton",
                "ttk.Radiobutton",
                "ttk.Frame",
                "ttk.Button",
                "ttk.Button",
                "ttk.LabelFrame",
                "ttk.Button",
                "ttk.LabelFrame",
                "ttk.Checkbutton",
                "ttk.Checkbutton",
                "ttk.Button",
                "ttk.Button",
                "ttk.Button",
                "ttk.Checkbutton",
                "ttk.LabelFrame",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Scale",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Scale",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Scale",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Scale",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Button",
                "ttk.Button",
                "ttk.Button",
                "ttk.Frame",
                "ttk.Checkbutton",
                "ttk.LabelFrame",
                "ttk.Frame",
                "ttk.Checkbutton",
                "ttk.Frame",
                "ttk.Button",
                "ttk.Button",
                "ttk.Button",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Scale",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Scale",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Frame",
                "ttk.Label",
                "ttk.LabelFrame",
                "ttk.Frame",
                "ttk.Treeview",
                "ttk.Scrollbar",
                "ttk.Frame",
                "ttk.Button",
                "ttk.Checkbutton",
                "ttk.Treeview",
                "ttk.Scrollbar",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Label",
                "ttk.Label",
                "ttk.Label",
                "ttk.Label",
                "ttk.Label",
                "ttk.Frame",
                "ttk.Button",
                "ttk.Button",
                "Tk()",
                "button(",
                "button(",
                "Button(",
                "Button(",
                "Button(",
                "Button(",
                "Button(",
                "button(",
                "button(",
                "button(",
                "button(",
                "button(",
                "Button(",
                "Button(",
                "Button(",
                "button(",
                "button(",
                "Button(",
                "Button(",
                "Button(",
                "button(",
                "Button(",
                "Button(",
                "Button(",
                "button(",
                "button(",
                "Button(",
                "Button(",
                "Button(",
                "Button(",
                "button(",
                "Button(",
                "Button(",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "Canvas(",
                "canvas(",
                "Canvas(",
                "canvas(",
                "Canvas(",
                "canvas(",
                "canvas(",
                "canvas(",
                "canvas(",
                "canvas(",
                "canvas(",
                "canvas(",
                "canvas(",
                "tk.Canvas",
                "tk.Canvas",
                "menu(",
                "menu(",
                "Menu(",
                "Menu(",
                "Menu(",
                "Menu(",
                "tk.Menu",
                "tk.Menu",
                "tk.Menu",
                "tk.Menu"
            ],
            "cv_calls": [
                "cv2.fillPoly",
                "cv2.cvtColor",
                "cv2.COLOR_BGR2RGB",
                "cv2.imwrite",
                "cv2.putText",
                "cv2.ellipse",
                "cv2.COLOR_RGB2BGR",
                "cv2.addWeighted",
                "cv2.line",
                "cv2.polylines",
                "cv2.imread",
                "cv2.circle",
                "cv2.VideoCapture",
                "cv2.resize",
                "cv2.FONT_HERSHEY_SIMPLEX"
            ]
        },
        "src\\config_manager.py": {
            "functions": [
                {
                    "name": "__init__",
                    "line": 102,
                    "args": [
                        "self",
                        "config_path"
                    ],
                    "decorators": []
                },
                {
                    "name": "load_config",
                    "line": 106,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "save_config",
                    "line": 151,
                    "args": [
                        "self",
                        "config"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_analysis_config",
                    "line": 171,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_setting",
                    "line": 187,
                    "args": [
                        "self",
                        "category",
                        "setting",
                        "value"
                    ],
                    "decorators": []
                },
                {
                    "name": "reset_to_defaults",
                    "line": 203,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_score_description",
                    "line": 209,
                    "args": [
                        "self",
                        "score"
                    ],
                    "decorators": []
                },
                {
                    "name": "export_config",
                    "line": 225,
                    "args": [
                        "self",
                        "export_path"
                    ],
                    "decorators": []
                },
                {
                    "name": "import_config",
                    "line": 235,
                    "args": [
                        "self",
                        "import_path"
                    ],
                    "decorators": []
                }
            ],
            "classes": [
                {
                    "name": "AnalysisSettings",
                    "line": 13,
                    "methods": [],
                    "bases": []
                },
                {
                    "name": "UISettings",
                    "line": 54,
                    "methods": [],
                    "bases": []
                },
                {
                    "name": "ApplicationConfig",
                    "line": 84,
                    "methods": [],
                    "bases": []
                },
                {
                    "name": "ConfigManager",
                    "line": 99,
                    "methods": [
                        "__init__",
                        "load_config",
                        "save_config",
                        "get_analysis_config",
                        "update_setting",
                        "reset_to_defaults",
                        "get_score_description",
                        "export_config",
                        "import_config"
                    ],
                    "bases": []
                }
            ],
            "imports": [
                "json",
                "os",
                "typing.Dict",
                "typing.Any",
                "typing.Optional",
                "dataclasses.dataclass",
                "dataclasses.asdict",
                "dataclasses.fields",
                "src.video_analyzer_enhanced.AnalysisConfig",
                "shutil",
                "shutil"
            ],
            "gui_elements": [],
            "cv_calls": []
        },
        "src\\face_detector.py": {
            "functions": [
                {
                    "name": "__init__",
                    "line": 13,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "detect_face_landmarks",
                    "line": 28,
                    "args": [
                        "self",
                        "image"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_frontal_score",
                    "line": 80,
                    "args": [
                        "self",
                        "landmarks",
                        "config"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_landmarks",
                    "line": 93,
                    "args": [
                        "self",
                        "image",
                        "landmarks",
                        "draw_all",
                        "key_only"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_face_mesh",
                    "line": 120,
                    "args": [
                        "self",
                        "image",
                        "landmarks"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_symmetry_axis",
                    "line": 146,
                    "args": [
                        "self",
                        "image",
                        "landmarks"
                    ],
                    "decorators": []
                }
            ],
            "classes": [
                {
                    "name": "FaceDetector",
                    "line": 12,
                    "methods": [
                        "__init__",
                        "detect_face_landmarks",
                        "calculate_frontal_score",
                        "draw_landmarks",
                        "draw_face_mesh",
                        "draw_symmetry_axis"
                    ],
                    "bases": []
                }
            ],
            "imports": [
                "cv2",
                "mediapipe",
                "numpy",
                "typing.List",
                "typing.Tuple",
                "typing.Optional",
                "src.utils.calculate_pure_frontal_score"
            ],
            "gui_elements": [],
            "cv_calls": [
                "cv2.COLOR_BGR2RGB",
                "cv2.line",
                "cv2.cvtColor",
                "cv2.circle"
            ]
        },
        "src\\green_dots_processor.py": {
            "functions": [
                {
                    "name": "process_image_file",
                    "line": 643,
                    "args": [
                        "image_path"
                    ],
                    "decorators": []
                },
                {
                    "name": "create_overlay_from_coordinates",
                    "line": 658,
                    "args": [
                        "image_size",
                        "left_coords",
                        "right_coords"
                    ],
                    "decorators": []
                },
                {
                    "name": "__init__",
                    "line": 34,
                    "args": [
                        "self",
                        "hue_range",
                        "saturation_min",
                        "value_range",
                        "cluster_size_range",
                        "clustering_radius"
                    ],
                    "decorators": []
                },
                {
                    "name": "rgb_to_hsv",
                    "line": 63,
                    "args": [
                        "self",
                        "r",
                        "g",
                        "b"
                    ],
                    "decorators": []
                },
                {
                    "name": "is_green_pixel",
                    "line": 101,
                    "args": [
                        "self",
                        "r",
                        "g",
                        "b"
                    ],
                    "decorators": []
                },
                {
                    "name": "cluster_pixels",
                    "line": 118,
                    "args": [
                        "self",
                        "pixels"
                    ],
                    "decorators": []
                },
                {
                    "name": "detect_green_dots",
                    "line": 167,
                    "args": [
                        "self",
                        "image"
                    ],
                    "decorators": []
                },
                {
                    "name": "divide_dots_by_vertical_center",
                    "line": 227,
                    "args": [
                        "self",
                        "dots",
                        "image_width"
                    ],
                    "decorators": []
                },
                {
                    "name": "sort_points_by_proximity",
                    "line": 250,
                    "args": [
                        "self",
                        "points"
                    ],
                    "decorators": []
                },
                {
                    "name": "sort_points_convex_hull",
                    "line": 286,
                    "args": [
                        "self",
                        "points"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_polygon_area",
                    "line": 314,
                    "args": [
                        "self",
                        "points"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_perimeter",
                    "line": 335,
                    "args": [
                        "self",
                        "points"
                    ],
                    "decorators": []
                },
                {
                    "name": "sort_points_optimal",
                    "line": 357,
                    "args": [
                        "self",
                        "points"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_shape_statistics",
                    "line": 379,
                    "args": [
                        "self",
                        "points",
                        "label"
                    ],
                    "decorators": []
                },
                {
                    "name": "generate_overlay",
                    "line": 407,
                    "args": [
                        "self",
                        "image_size",
                        "left_points",
                        "right_points",
                        "left_color",
                        "right_color",
                        "border_width"
                    ],
                    "decorators": []
                },
                {
                    "name": "process_image",
                    "line": 496,
                    "args": [
                        "self",
                        "image_path"
                    ],
                    "decorators": []
                },
                {
                    "name": "process_pil_image",
                    "line": 570,
                    "args": [
                        "self",
                        "pil_image"
                    ],
                    "decorators": []
                },
                {
                    "name": "angle_distance",
                    "line": 302,
                    "args": [
                        "p"
                    ],
                    "decorators": []
                }
            ],
            "classes": [
                {
                    "name": "GreenDotsProcessor",
                    "line": 29,
                    "methods": [
                        "__init__",
                        "rgb_to_hsv",
                        "is_green_pixel",
                        "cluster_pixels",
                        "detect_green_dots",
                        "divide_dots_by_vertical_center",
                        "sort_points_by_proximity",
                        "sort_points_convex_hull",
                        "calculate_polygon_area",
                        "calculate_perimeter",
                        "sort_points_optimal",
                        "calculate_shape_statistics",
                        "generate_overlay",
                        "process_image",
                        "process_pil_image"
                    ],
                    "bases": []
                }
            ],
            "imports": [
                "cv2",
                "numpy",
                "PIL.Image",
                "PIL.ImageDraw",
                "math",
                "typing.Dict",
                "typing.List",
                "typing.Tuple",
                "typing.Optional"
            ],
            "gui_elements": [],
            "cv_calls": []
        },
        "src\\measurement_tools.py": {
            "functions": [
                {
                    "name": "__init__",
                    "line": 12,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_distance",
                    "line": 35,
                    "args": [
                        "self",
                        "point1",
                        "point2"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_angle",
                    "line": 41,
                    "args": [
                        "self",
                        "point1",
                        "vertex",
                        "point2"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_polygon_area",
                    "line": 50,
                    "args": [
                        "self",
                        "points"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_facial_measurements",
                    "line": 65,
                    "args": [
                        "self",
                        "landmarks"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_facial_symmetry",
                    "line": 161,
                    "args": [
                        "self",
                        "landmarks"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_golden_ratio_scores",
                    "line": 206,
                    "args": [
                        "self",
                        "measurements"
                    ],
                    "decorators": []
                },
                {
                    "name": "_calculate_ratio_score",
                    "line": 262,
                    "args": [
                        "self",
                        "actual",
                        "ideal",
                        "tolerance"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_measurement_description",
                    "line": 290,
                    "args": [
                        "self",
                        "measurement_name"
                    ],
                    "decorators": []
                },
                {
                    "name": "format_measurement_value",
                    "line": 322,
                    "args": [
                        "self",
                        "value",
                        "measurement_type"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_eyebrow_areas",
                    "line": 339,
                    "args": [
                        "self",
                        "landmarks"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_eye_areas",
                    "line": 398,
                    "args": [
                        "self",
                        "landmarks"
                    ],
                    "decorators": []
                }
            ],
            "classes": [
                {
                    "name": "MeasurementTools",
                    "line": 11,
                    "methods": [
                        "__init__",
                        "calculate_distance",
                        "calculate_angle",
                        "calculate_polygon_area",
                        "calculate_facial_measurements",
                        "calculate_facial_symmetry",
                        "calculate_golden_ratio_scores",
                        "_calculate_ratio_score",
                        "get_measurement_description",
                        "format_measurement_value",
                        "calculate_eyebrow_areas",
                        "calculate_eye_areas"
                    ],
                    "bases": []
                }
            ],
            "imports": [
                "math",
                "numpy",
                "typing.List",
                "typing.Tuple",
                "typing.Optional",
                "typing.Dict",
                "src.utils.calculate_distance",
                "src.utils.calculate_angle"
            ],
            "gui_elements": [],
            "cv_calls": []
        },
        "src\\professional_canvas.py": {
            "functions": [
                {
                    "name": "create_professional_canvas",
                    "line": 938,
                    "args": [
                        "parent",
                        "width",
                        "height"
                    ],
                    "decorators": []
                },
                {
                    "name": "__post_init__",
                    "line": 58,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "__post_init__",
                    "line": 73,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "__init__",
                    "line": 81,
                    "args": [
                        "self",
                        "parent",
                        "width",
                        "height"
                    ],
                    "decorators": []
                },
                {
                    "name": "create_default_layer",
                    "line": 121,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_gui",
                    "line": 129,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_matplotlib_canvas",
                    "line": 165,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_toolbar",
                    "line": 195,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "setup_layers_panel",
                    "line": 306,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "create_tooltip",
                    "line": 352,
                    "args": [
                        "self",
                        "widget",
                        "text"
                    ],
                    "decorators": []
                },
                {
                    "name": "bind_events",
                    "line": 373,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_tool",
                    "line": 381,
                    "args": [
                        "self",
                        "tool"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_mouse_press",
                    "line": 397,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_mouse_release",
                    "line": 421,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_mouse_move",
                    "line": 436,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "start_drawing",
                    "line": 448,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "preview_drawing",
                    "line": 452,
                    "args": [
                        "self",
                        "current_point"
                    ],
                    "decorators": []
                },
                {
                    "name": "finish_drawing",
                    "line": 514,
                    "args": [
                        "self",
                        "end_point"
                    ],
                    "decorators": []
                },
                {
                    "name": "add_drawing_object",
                    "line": 573,
                    "args": [
                        "self",
                        "artist",
                        "obj_type"
                    ],
                    "decorators": []
                },
                {
                    "name": "cleanup_temp_artist",
                    "line": 591,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "add_text",
                    "line": 604,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "add_ruler",
                    "line": 618,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "handle_selection",
                    "line": 633,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "choose_color",
                    "line": 638,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_line_width_change",
                    "line": 645,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_snap",
                    "line": 649,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_grid",
                    "line": 653,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "fit_to_window",
                    "line": 659,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "reset_view",
                    "line": 668,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_image",
                    "line": 674,
                    "args": [
                        "self",
                        "image"
                    ],
                    "decorators": []
                },
                {
                    "name": "add_layer",
                    "line": 698,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "remove_layer",
                    "line": 709,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "move_layer_up",
                    "line": 728,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "move_layer_down",
                    "line": 740,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_current_layer",
                    "line": 752,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_layers_tree",
                    "line": 759,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_layer_click",
                    "line": 778,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_layer_double_click",
                    "line": 797,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "toggle_layer_visibility",
                    "line": 811,
                    "args": [
                        "self",
                        "layer"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_scroll",
                    "line": 818,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "zoom_at_point",
                    "line": 838,
                    "args": [
                        "self",
                        "x",
                        "y",
                        "scale_factor"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_key_press",
                    "line": 858,
                    "args": [
                        "self",
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "delete_selected_objects",
                    "line": 867,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "undo",
                    "line": 883,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "redo",
                    "line": 888,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "update_status",
                    "line": 893,
                    "args": [
                        "self",
                        "message"
                    ],
                    "decorators": []
                },
                {
                    "name": "clear_canvas",
                    "line": 897,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "export_measurements",
                    "line": 913,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_enter",
                    "line": 355,
                    "args": [
                        "event"
                    ],
                    "decorators": []
                },
                {
                    "name": "on_leave",
                    "line": 365,
                    "args": [
                        "event"
                    ],
                    "decorators": []
                }
            ],
            "classes": [
                {
                    "name": "Tool",
                    "line": 22,
                    "methods": [],
                    "bases": [
                        "Enum"
                    ]
                },
                {
                    "name": "DrawMode",
                    "line": 39,
                    "methods": [],
                    "bases": [
                        "Enum"
                    ]
                },
                {
                    "name": "Layer",
                    "line": 48,
                    "methods": [
                        "__post_init__"
                    ],
                    "bases": []
                },
                {
                    "name": "DrawingObject",
                    "line": 64,
                    "methods": [
                        "__post_init__"
                    ],
                    "bases": []
                },
                {
                    "name": "ProfessionalCanvas",
                    "line": 78,
                    "methods": [
                        "__init__",
                        "create_default_layer",
                        "setup_gui",
                        "setup_matplotlib_canvas",
                        "setup_toolbar",
                        "setup_layers_panel",
                        "create_tooltip",
                        "bind_events",
                        "set_tool",
                        "on_mouse_press",
                        "on_mouse_release",
                        "on_mouse_move",
                        "start_drawing",
                        "preview_drawing",
                        "finish_drawing",
                        "add_drawing_object",
                        "cleanup_temp_artist",
                        "add_text",
                        "add_ruler",
                        "handle_selection",
                        "choose_color",
                        "on_line_width_change",
                        "toggle_snap",
                        "toggle_grid",
                        "fit_to_window",
                        "reset_view",
                        "set_image",
                        "add_layer",
                        "remove_layer",
                        "move_layer_up",
                        "move_layer_down",
                        "get_current_layer",
                        "update_layers_tree",
                        "on_layer_click",
                        "on_layer_double_click",
                        "toggle_layer_visibility",
                        "on_scroll",
                        "zoom_at_point",
                        "on_key_press",
                        "delete_selected_objects",
                        "undo",
                        "redo",
                        "update_status",
                        "clear_canvas",
                        "export_measurements"
                    ],
                    "bases": []
                }
            ],
            "imports": [
                "tkinter",
                "tkinter.ttk",
                "tkinter.messagebox",
                "tkinter.colorchooser",
                "tkinter.simpledialog",
                "numpy",
                "PIL.Image",
                "PIL.ImageTk",
                "PIL.ImageDraw",
                "PIL.ImageFont",
                "matplotlib.pyplot",
                "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg",
                "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk",
                "matplotlib.patches.Rectangle",
                "matplotlib.patches.Circle",
                "matplotlib.patches.Polygon",
                "matplotlib.patches.FancyArrowPatch",
                "matplotlib.lines.Line2D",
                "matplotlib.text.Text",
                "matplotlib.widgets.RectangleSelector",
                "matplotlib.widgets.EllipseSelector",
                "matplotlib.patches",
                "typing.List",
                "typing.Tuple",
                "typing.Optional",
                "typing.Dict",
                "typing.Any",
                "uuid",
                "dataclasses.dataclass",
                "enum.Enum"
            ],
            "gui_elements": [
                "tk.Frame",
                "tk.BOTH",
                "tk.Frame",
                "tk.TOP",
                "tk.X",
                "tk.Frame",
                "tk.TOP",
                "tk.BOTH",
                "tk.Frame",
                "tk.LEFT",
                "tk.BOTH",
                "tk.Frame",
                "tk.RIGHT",
                "tk.Y",
                "tk.Frame",
                "tk.BOTTOM",
                "tk.X",
                "tk.StringVar",
                "tk.Label",
                "tk.LEFT",
                "tk.StringVar",
                "tk.Label",
                "tk.RIGHT",
                "tk.BOTH",
                "tk.Frame",
                "tk.TOP",
                "tk.X",
                "tk.Button",
                "tk.LabelFrame",
                "tk.LEFT",
                "tk.Button",
                "tk.Button",
                "tk.LEFT",
                "tk.LabelFrame",
                "tk.LEFT",
                "tk.Button",
                "tk.LEFT",
                "tk.LabelFrame",
                "tk.LEFT",
                "tk.Button",
                "tk.Button",
                "tk.LEFT",
                "tk.LabelFrame",
                "tk.LEFT",
                "tk.Button",
                "tk.LEFT",
                "tk.Label",
                "tk.LEFT",
                "tk.IntVar",
                "tk.Spinbox",
                "tk.LEFT",
                "tk.Frame",
                "tk.LEFT",
                "tk.BooleanVar",
                "tk.Checkbutton",
                "tk.LabelFrame",
                "tk.BOTH",
                "tk.Frame",
                "tk.X",
                "tk.Button",
                "tk.LEFT",
                "tk.Button",
                "tk.LEFT",
                "tk.Button",
                "tk.LEFT",
                "tk.Button",
                "tk.LEFT",
                "tk.Treeview",
                "tk.BOTH",
                "tk.LabelFrame",
                "tk.X",
                "tk.Text",
                "tk.WORD",
                "tk.BOTH",
                "tk.Toplevel",
                "tk.Label",
                "tk.Tk",
                "ttk.Frame",
                "ttk.Frame",
                "ttk.Frame",
                "ttk.Frame",
                "ttk.Frame",
                "ttk.Frame",
                "ttk.Label",
                "ttk.Label",
                "ttk.Frame",
                "ttk.LabelFrame",
                "ttk.Button",
                "ttk.Button",
                "ttk.LabelFrame",
                "ttk.Button",
                "ttk.LabelFrame",
                "ttk.Button",
                "ttk.Button",
                "ttk.LabelFrame",
                "ttk.Label",
                "ttk.Spinbox",
                "ttk.Frame",
                "ttk.Checkbutton",
                "ttk.LabelFrame",
                "ttk.Frame",
                "ttk.Button",
                "ttk.Button",
                "ttk.Button",
                "ttk.Button",
                "ttk.Treeview",
                "ttk.LabelFrame",
                "Tk()",
                "Toplevel()",
                "Button(",
                "Button(",
                "Button(",
                "Button(",
                "Button(",
                "Button(",
                "button(",
                "Button(",
                "Button(",
                "Button(",
                "Button(",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "tk.Button",
                "Label(",
                "Label(",
                "Label(",
                "Label(",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "tk.Label",
                "canvas(",
                "canvas(",
                "canvas(",
                "canvas(",
                "Canvas(",
                "Canvas("
            ],
            "cv_calls": []
        },
        "src\\scoring_config.py": {
            "functions": [
                {
                    "name": "__init__",
                    "line": 9,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_callback",
                    "line": 36,
                    "args": [
                        "self",
                        "callback"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_weights",
                    "line": 40,
                    "args": [
                        "self",
                        "nose",
                        "mouth",
                        "symmetry",
                        "eye"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_weights_dict",
                    "line": 68,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_tolerances",
                    "line": 77,
                    "args": [
                        "self",
                        "nose_tol",
                        "mouth_tol",
                        "symmetry_tol"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_nose_weight",
                    "line": 89,
                    "args": [
                        "self",
                        "weight"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_mouth_weight",
                    "line": 93,
                    "args": [
                        "self",
                        "weight"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_symmetry_weight",
                    "line": 97,
                    "args": [
                        "self",
                        "weight"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_eye_weight",
                    "line": 101,
                    "args": [
                        "self",
                        "weight"
                    ],
                    "decorators": []
                },
                {
                    "name": "__str__",
                    "line": 105,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                }
            ],
            "classes": [
                {
                    "name": "ScoringConfig",
                    "line": 6,
                    "methods": [
                        "__init__",
                        "set_callback",
                        "set_weights",
                        "get_weights_dict",
                        "set_tolerances",
                        "set_nose_weight",
                        "set_mouth_weight",
                        "set_symmetry_weight",
                        "set_eye_weight",
                        "__str__"
                    ],
                    "bases": []
                }
            ],
            "imports": [],
            "gui_elements": [],
            "cv_calls": []
        },
        "src\\utils.py": {
            "functions": [
                {
                    "name": "calculate_distance",
                    "line": 12,
                    "args": [
                        "point1",
                        "point2"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_angle",
                    "line": 19,
                    "args": [
                        "point1",
                        "vertex",
                        "point2"
                    ],
                    "decorators": []
                },
                {
                    "name": "calculate_pure_frontal_score",
                    "line": 41,
                    "args": [
                        "landmarks",
                        "image_shape",
                        "config"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_advanced_orientation_score",
                    "line": 254,
                    "args": [
                        "landmarks",
                        "image_size"
                    ],
                    "decorators": []
                },
                {
                    "name": "resize_image_keep_aspect",
                    "line": 360,
                    "args": [
                        "image",
                        "max_width",
                        "max_height"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_landmark",
                    "line": 378,
                    "args": [
                        "image",
                        "point",
                        "color",
                        "radius"
                    ],
                    "decorators": []
                },
                {
                    "name": "draw_line",
                    "line": 388,
                    "args": [
                        "image",
                        "point1",
                        "point2",
                        "color",
                        "thickness"
                    ],
                    "decorators": []
                },
                {
                    "name": "add_text_with_background",
                    "line": 405,
                    "args": [
                        "image",
                        "text",
                        "position",
                        "font_scale",
                        "color",
                        "bg_color"
                    ],
                    "decorators": []
                }
            ],
            "classes": [],
            "imports": [
                "cv2",
                "numpy",
                "math",
                "typing.List",
                "typing.Tuple",
                "typing.Optional",
                "typing.Dict",
                "src.scoring_config.scoring_config"
            ],
            "gui_elements": [],
            "cv_calls": [
                "cv2.resize",
                "cv2.putText",
                "cv2.line",
                "cv2.rectangle",
                "cv2.circle",
                "cv2.getTextSize",
                "cv2.FONT_HERSHEY_SIMPLEX"
            ]
        },
        "src\\video_analyzer.py": {
            "functions": [
                {
                    "name": "__init__",
                    "line": 14,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_completion_callback",
                    "line": 49,
                    "args": [
                        "self",
                        "callback"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_preview_callback",
                    "line": 53,
                    "args": [
                        "self",
                        "callback"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_frame_callback",
                    "line": 57,
                    "args": [
                        "self",
                        "callback"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_debug_callback",
                    "line": 61,
                    "args": [
                        "self",
                        "callback"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_scoring_config",
                    "line": 67,
                    "args": [
                        "self",
                        "scoring_config"
                    ],
                    "decorators": []
                },
                {
                    "name": "play_pause",
                    "line": 73,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "stop",
                    "line": 103,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "seek_to_time",
                    "line": 128,
                    "args": [
                        "self",
                        "time_ms"
                    ],
                    "decorators": []
                },
                {
                    "name": "set_playback_speed",
                    "line": 147,
                    "args": [
                        "self",
                        "speed"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_current_time_ms",
                    "line": 155,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_duration_ms",
                    "line": 161,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_fps",
                    "line": 165,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "is_video_playing",
                    "line": 169,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "start_camera_capture",
                    "line": 175,
                    "args": [
                        "self",
                        "camera_index"
                    ],
                    "decorators": []
                },
                {
                    "name": "load_video_file",
                    "line": 225,
                    "args": [
                        "self",
                        "video_path"
                    ],
                    "decorators": []
                },
                {
                    "name": "analyze_frame",
                    "line": 269,
                    "args": [
                        "self",
                        "frame"
                    ],
                    "decorators": []
                },
                {
                    "name": "start_live_analysis",
                    "line": 301,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "_simple_analysis_loop",
                    "line": 321,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "stop_analysis",
                    "line": 472,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "get_best_frame_data",
                    "line": 476,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                },
                {
                    "name": "analyze_video_file",
                    "line": 487,
                    "args": [
                        "self",
                        "max_frames"
                    ],
                    "decorators": []
                },
                {
                    "name": "release",
                    "line": 556,
                    "args": [
                        "self"
                    ],
                    "decorators": []
                }
            ],
            "classes": [
                {
                    "name": "VideoAnalyzer",
                    "line": 13,
                    "methods": [
                        "__init__",
                        "set_completion_callback",
                        "set_preview_callback",
                        "set_frame_callback",
                        "set_debug_callback",
                        "set_scoring_config",
                        "play_pause",
                        "stop",
                        "seek_to_time",
                        "set_playback_speed",
                        "get_current_time_ms",
                        "get_duration_ms",
                        "get_fps",
                        "is_video_playing",
                        "start_camera_capture",
                        "load_video_file",
                        "analyze_frame",
                        "start_live_analysis",
                        "_simple_analysis_loop",
                        "stop_analysis",
                        "get_best_frame_data",
                        "analyze_video_file",
                        "release"
                    ],
                    "bases": []
                }
            ],
            "imports": [
                "cv2",
                "numpy",
                "threading",
                "time",
                "typing.Optional",
                "typing.Tuple",
                "typing.List",
                "typing.Callable",
                "src.face_detector.FaceDetector",
                "time",
                "time",
                "src.utils.calculate_pure_frontal_score"
            ],
            "gui_elements": [],
            "cv_calls": [
                "cv2.CAP_PROP_FRAME_HEIGHT",
                "cv2.CAP_PROP_POS_FRAMES",
                "cv2.CAP_PROP_POS_MSEC",
                "cv2.CAP_PROP_FRAME_WIDTH",
                "cv2.CAP_PROP_FPS",
                "cv2.CAP_PROP_FRAME_COUNT",
                "cv2.VideoCapture"
            ]
        }
    },
    "classes": {},
    "imports": [
        "src.professional_canvas.ProfessionalCanvas",
        "tkinter.filedialog",
        "typing.Dict",
        "src.utils.calculate_pure_frontal_score",
        "json",
        "src.scoring_config.ScoringConfig",
        "sys",
        "matplotlib.lines.Line2D",
        "matplotlib.widgets.EllipseSelector",
        "time",
        "matplotlib.pyplot",
        "matplotlib.patches.Circle",
        "threading",
        "tkinter.messagebox",
        "matplotlib.patches.FancyArrowPatch",
        "uuid",
        "typing.Tuple",
        "datetime",
        "src.canvas_app.CanvasApp",
        "PIL.ImageFont",
        "shutil",
        "enum.Enum",
        "traceback",
        "src.utils.calculate_distance",
        "src.face_detector.FaceDetector",
        "tkinter.colorchooser",
        "tkinter.simpledialog",
        "matplotlib.backends.backend_tkagg.FigureCanvasTkAgg",
        "signal",
        "matplotlib.patches.Rectangle",
        "PIL.ImageTk",
        "numpy",
        "src.utils.get_advanced_orientation_score",
        "src.utils.resize_image_keep_aspect",
        "src.green_dots_processor.GreenDotsProcessor",
        "PIL.ImageDraw",
        "typing.Optional",
        "math",
        "matplotlib.patches.Polygon",
        "cv2",
        "logging",
        "typing.List",
        "matplotlib.patches",
        "src.video_analyzer_enhanced.AnalysisConfig",
        "matplotlib.backends.backend_tkagg.NavigationToolbar2Tk",
        "typing.Any",
        "src.scoring_config.scoring_config",
        "tkinter.ttk",
        "dataclasses.dataclass",
        "src.measurement_tools.MeasurementTools",
        "tkinter",
        "matplotlib.text.Text",
        "typing.Callable",
        "dataclasses.asdict",
        "src.video_analyzer.VideoAnalyzer",
        "mediapipe",
        "dataclasses.fields",
        "matplotlib.widgets.RectangleSelector",
        "src.utils.calculate_angle",
        "PIL.Image",
        "os"
    ],
    "gui_components": {
        "frameworks": [
            "tkinter"
        ]
    },
    "cv_operations": [],
    "file_operations": [],
    "config_files": [
        "config.json"
    ],
    "dependencies": [],
    "entry_points": [
        "src\\green_dots_processor.py",
        "src\\professional_canvas.py",
        "src\\canvas_app.py",
        "main.py"
    ],
    "recommendations": [
        "🔧 Migration da tkinter - richiede refactoring widget",
        "⚠️  Multiple entry point - chiarire punto di avvio",
        "🔨 App complessa - considerare integrazione graduale"
    ]
}